import{_ as e,r as o,o as c,a as l,d as n,b as a,w as p,F as u,e as i,f as t}from"./app.7eb989d9.js";const k={},r=n("div",{class:"custom-container info"},[n("p",{class:"custom-container-title"},"\u76F8\u5173\u4FE1\u606F"),n("p",null,"\u6587\u7AE0\u4ECB\u7ECD")],-1),m={class:"table-of-contents"},d=t("JDK\u7684\u52A8\u6001\u4EE3\u7406"),b=t("OpenFeign\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61\u8FC7\u7A0B"),y=t("\u914D\u7F6E\u9879\u89E3\u6790"),w=t("\u4EE3\u7406\u751F\u6210\u8FC7\u7A0B"),g=i(`<hr><h1 id="\u521B\u5EFAopenfeign\u4EE3\u7406" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFAopenfeign\u4EE3\u7406" aria-hidden="true">#</a> \u521B\u5EFAOpenFeign\u4EE3\u7406</h1><p>OpenFeign\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61\u4E3B\u8981\u662F\u57FA\u4E8EJDK\u7684\u52A8\u6001\u4EE3\u7406\u5B9E\u73B0\u7684\uFF0C\u4E0B\u9762\u5148\u6765\u770B\u4E00\u4E0BJDK\u7684\u52A8\u6001\u4EE3\u7406\u7684\u521B\u5EFA\u8FC7\u7A0B\u3002</p><h2 id="jdk\u7684\u52A8\u6001\u4EE3\u7406" tabindex="-1"><a class="header-anchor" href="#jdk\u7684\u52A8\u6001\u4EE3\u7406" aria-hidden="true">#</a> JDK\u7684\u52A8\u6001\u4EE3\u7406</h2><p>\u4F7F\u7528JDK\u7684\u52A8\u6001\u4EE3\u7406\uFF0C\u9700\u8981\u4E0B\u9762\u51E0\u4E2A\u6B65\u9AA4\uFF1A</p><ol><li><strong>\u7F16\u5199\u63A5\u53E3\u4EE5\u53CA\u5BF9\u5E94\u4EE3\u7406\u7C7B</strong>\u3002\u8FD9\u91CC\u7F16\u5199\u4E00\u4E2A\u7B80\u5355\u7684\u63A5\u53E3\u4EE5\u53CA\u5B9E\u73B0\u7C7B\uFF1A</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u63A5\u53E3</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ReflectTest</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">testReflect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5B9E\u73B0\u7C7B</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReflectTestImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ReflectTest</span><span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testReflect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;\u8FD9\u662F\u4EE3\u7406\u63A5\u53E3\u5B9E\u73B0\u7C7BReflectTestImpl&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2"><li><strong>\u521B\u5EFA\u52A8\u6001\u4EE3\u7406java.lang.reflect.InvocationHandler\u5B9E\u73B0\u7C7B</strong>\u3002\u4E0B\u9762\u662F\u521B\u5EFA\u7684\u4E00\u4E2A\u7B80\u5355\u7684\u4EE3\u7406\u5B9E\u73B0\u7C7B\u3002</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReflectTestProxy</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">ReflectTest</span> reflectTest<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">ReflectTestProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reflectTest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReflectTestImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * \u521B\u5EFA\u4EE3\u7406\u7C7B\u7684\u65B9\u6CD5
     * <span class="token keyword">@param</span> <span class="token parameter">proxiedObject</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">createProxy</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxiedObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces <span class="token operator">=</span> proxiedObject<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SimpleJDKInvocationHandler</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleJDKInvocationHandler</span><span class="token punctuation">(</span>proxiedObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4F7F\u7528Proxy\u8FDB\u884C\u521B\u5EFA\uFF0C\u9700\u8981\u83B7\u53D6\u5230\u3010\u88AB\u4EE3\u7406\u7C7B\u7684ClassLoader\u3011\u3001\u3010\u63A5\u53E3\u3011\u3001\u3010InvocationHandler\u5B9E\u73B0\uFF08\u589E\u5F3A\u903B\u8F91\uFF09\u3011</span>
        <span class="token keyword">return</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>proxiedObject<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>interfaces<span class="token punctuation">,</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">class</span> <span class="token class-name">SimpleJDKInvocationHandler</span> <span class="token keyword">implements</span> <span class="token class-name">InvocationHandler</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> reflectTest<span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token class-name">SimpleJDKInvocationHandler</span><span class="token punctuation">(</span><span class="token class-name">Object</span> reflectTest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>reflectTest <span class="token operator">=</span> reflectTest<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EE3\u7406\u7C7B\u589E\u5F3A\u975E\u4E1A\u52A1\u4E3B\u5E72&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> invoke <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>reflectTest<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token string">&quot;\u8FD9\u4E2A\u7C7B\u5DF2\u7ECF\u88AB\u4EE3\u7406\u589E\u5F3A\uFF1A&quot;</span> <span class="token operator">+</span> invoke<span class="token punctuation">;</span>
            <span class="token keyword">return</span> result<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><ol start="3"><li>\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61\uFF0C\u5E76\u4F7F\u7528\u4EE3\u7406\u5BF9\u8C61\u3002\u4E00\u822C\u901A\u8FC7Proxy\u7684\u9759\u6001\u65B9\u6CD5\u521B\u5EFA\uFF0C\u4E0B\u9762\u662F\u4E3E\u4F8B\uFF1A</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ReflectTestProxy</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReflectTestProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ReflectTest</span> reflectTest <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ReflectTest</span><span class="token punctuation">)</span>proxy<span class="token punctuation">.</span><span class="token function">createProxy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ReflectTestImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> result <span class="token operator">=</span> reflectTest<span class="token punctuation">.</span><span class="token function">testReflect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="openfeign\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#openfeign\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61\u8FC7\u7A0B" aria-hidden="true">#</a> OpenFeign\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61\u8FC7\u7A0B</h2><p>OpenFeign\u5B9E\u9645\u4E0A\u662F\u5BF9Feign\u539F\u751F\u63A5\u53E3\u7684\u589E\u5F3A\uFF0C\u56E0\u6B64\u63A2\u7A76OpenFeign\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61\u7684\u8FC7\u7A0B\uFF0C\u9700\u8981\u4ECEFeign\u7684\u539F\u751F\u63A5\u53E3\u5165\u624B\uFF0C\u63A5\u4E0B\u6765\u901A\u8FC7\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u770B\u4E00\u770B\u521B\u5EFA\u7531Feign\u4EE3\u7406\u7684Http\u8C03\u7528\u63A5\u53E3\u7684\u5185\u90E8\u6D41\u7A0B\u3002</p><p>\u4E0B\u9762\u662F\u4F8B\u5B50\u7684\u4EE3\u7801\uFF0C\u4E3B\u8981\u5C55\u793AFeign\u7684\u4E3B\u8981\u63A5\u53E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u521B\u5EFA\u63A5\u53E3</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OriginFeign</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@RequestLine</span><span class="token punctuation">(</span><span class="token string">&quot;GET /demo/simple/{identity}/{dataTime}&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Position</span><span class="token punctuation">&gt;</span></span> <span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;identity&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> identity<span class="token punctuation">,</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;dataTime&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> dataTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8C03\u7528\u8FC7\u7A0B</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFAFeign\u4EE3\u7406</span>
    <span class="token class-name">OriginFeign</span> feignClient <span class="token operator">=</span> <span class="token class-name">Feign</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token comment">// \u8BBE\u7F6Edecoder</span>
            <span class="token punctuation">.</span><span class="token function">decoder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FastJsonDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment">// \u6307\u5B9A\u8981\u88AB\u4EE3\u7406\u7684\u63A5\u53E3\u548C\u57FA\u5730\u5740</span>
            <span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span><span class="token class-name">OriginFeign</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;http://localhost:8010&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Position</span><span class="token punctuation">&gt;</span></span> position <span class="token operator">=</span> feignClient<span class="token punctuation">.</span><span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token string">&quot;demo-service&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2021&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="\u914D\u7F6E\u9879\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u9879\u89E3\u6790" aria-hidden="true">#</a> \u914D\u7F6E\u9879\u89E3\u6790</h3><p>\u901A\u8FC7\u4E0A\u9762\u7684\u4F7F\u7528\u4E3E\u4F8B\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\uFF0CFeign\u521B\u5EFA\u4EE3\u7406\u7684\u6838\u5FC3\u63A5\u53E3\u662FFeign.builder()\uFF0C\u53EF\u4EE5\u8BF4\u660EFeign\u7684Builder\u7EC4\u4EF6\u662F\u53EF\u4EE5\u914D\u7F6E\u7684\uFF0C\u6211\u4EEC\u540E\u9762<strong>\u5B9A\u5236\u5316OpenFeign\u5F88\u5927\u7A0B\u5EA6\u4E0A\u4E5F\u662F\u4F9D\u8D56\u914D\u7F6E\u9879\u7684</strong>\uFF0C\u5176\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u62E6\u622A\u5668\u5217\u8868\uFF0C\u9ED8\u8BA4\u62E6\u622A\u5668\u4E3A\u7A7A</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RequestInterceptor</span><span class="token punctuation">&gt;</span></span> requestInterceptors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u65E5\u5FD7\u7EA7\u522B\uFF0C\u9ED8\u8BA4\u4E0D\u6253\u5370\u65E5\u5FD7</span>
<span class="token keyword">private</span> <span class="token class-name">Level</span> logLevel<span class="token punctuation">;</span>
<span class="token comment">// \u5951\u7EA6\u89E3\u6790\u5668\uFF0C\u9ED8\u8BA4\u662F\u652F\u6301OpenFeign\u7684\u5185\u7F6E\u89E3\u6790\u5668\uFF0CDefault</span>
<span class="token keyword">private</span> <span class="token class-name">Contract</span> contract<span class="token punctuation">;</span>
<span class="token comment">// http client\uFF0C\u9ED8\u8BA4\u662FHttpURLConnection</span>
<span class="token keyword">private</span> <span class="token class-name">Client</span> client<span class="token punctuation">;</span>
<span class="token comment">// \u91CD\u8BD5\u5668\uFF0C\u9ED8\u8BA4\u4E5F\u662Fdefault</span>
<span class="token keyword">private</span> <span class="token class-name">Retryer</span> retryer<span class="token punctuation">;</span>
<span class="token comment">// \u65E5\u5FD7\u7EC4\u4EF6\uFF0C\u9ED8\u8BA4\u4E0D\u8BB0\u5F55</span>
<span class="token keyword">private</span> <span class="token class-name">Logger</span> logger<span class="token punctuation">;</span>
<span class="token comment">// \u7F16\u7801\u5668\u548C\u89E3\u7801\u5668\uFF0C\u9ED8\u8BA4\u4E5F\u90FD\u662Fdefault</span>
<span class="token keyword">private</span> <span class="token class-name">Encoder</span> encoder<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">Decoder</span> decoder<span class="token punctuation">;</span>
<span class="token comment">// \u67E5\u8BE2\u53C2\u6570\u7F16\u7801\u5668\uFF0C\u4E00\u822C\u4E5F\u4E0D\u4F1A\u4FEE\u6539</span>
<span class="token keyword">private</span> <span class="token class-name">QueryMapEncoder</span> queryMapEncoder<span class="token punctuation">;</span>
<span class="token comment">// \u9519\u8BEF\u89E3\u7801\u5668\uFF0C\u9ED8\u8BA4default</span>
<span class="token keyword">private</span> <span class="token class-name">ErrorDecoder</span> errorDecoder<span class="token punctuation">;</span>
<span class="token comment">// \u8D85\u65F6\u914D\u7F6E\u901A\u8FC7 Options\u914D\u7F6E\uFF0C\u4E0D\u66F4\u6539\u7684\u8BDD\u4F7F\u7528\u9ED8\u8BA4\u914D\u7F6E</span>
<span class="token keyword">private</span> <span class="token class-name">Options</span> options<span class="token punctuation">;</span>
<span class="token comment">// \u7528\u6765\u751F\u6210\u52A8\u6001\u4EE3\u7406\u7684InvocationHandler\u7684Factory\uFF0C\u4E5F\u6709\u9ED8\u8BA4\u5B9E\u73B0</span>
<span class="token keyword">private</span> <span class="token class-name">InvocationHandlerFactory</span> invocationHandlerFactory<span class="token punctuation">;</span>
<span class="token comment">// \u662F\u5426\u89E3\u6790404\u9519\u8BEF\uFF0C\u9ED8\u8BA4false\uFF0C\u56E0\u4E3A\u5927\u591A\u6570\u60C5\u51B5\u4E0B404\u6211\u4EEC\u4E0D\u60F3\u629B\u51FA\u5F02\u5E38</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span> decode404<span class="token punctuation">;</span>
<span class="token comment">// \u662F\u5426\u89E3\u7801\u540E\u7ACB\u5373\u5173\u95EDResponse\uFF0C\u9ED8\u8BA4true</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span> closeAfterDecode<span class="token punctuation">;</span>
<span class="token comment">// \u5F02\u5E38\u4F20\u64AD\u89C4\u5219\uFF0C\u9ED8\u8BA4\u4E0D\u4F20\u64AD</span>
<span class="token keyword">private</span> <span class="token class-name">ExceptionPropagationPolicy</span> propagationPolicy<span class="token punctuation">;</span>
<span class="token comment">// \u662F\u5426\u5F3A\u5236\u89E3\u7801\uFF0C\u4E3B\u8981\u662F\u4E3A\u4E86\u517C\u5BB9\u5F02\u6B65Feign\u5F15\u5165\uFF0C\u5F88\u5C11\u7528\u5230\uFF0C\u8BA4\u4E3A\u5176\u5B9Efalse</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span> forceDecoding<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Capability</span><span class="token punctuation">&gt;</span></span> capabilities<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token class-name">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>logLevel <span class="token operator">=</span> <span class="token class-name">Level</span><span class="token punctuation">.</span>NONE<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>contract <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>Client<span class="token punctuation">.</span>Default</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SSLSocketFactory</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">HostnameVerifier</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>retryer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>Retryer<span class="token punctuation">.</span>Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>logger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NoOpLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>encoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span>Encoder<span class="token punctuation">.</span>Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>decoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span>Decoder<span class="token punctuation">.</span>Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>queryMapEncoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FieldQueryMapEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>errorDecoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span>ErrorDecoder<span class="token punctuation">.</span>Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>invocationHandlerFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">feign<span class="token punctuation">.</span></span>InvocationHandlerFactory<span class="token punctuation">.</span>Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>closeAfterDecode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>propagationPolicy <span class="token operator">=</span> <span class="token class-name">ExceptionPropagationPolicy</span><span class="token punctuation">.</span>NONE<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>forceDecoding <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>capabilities <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h3 id="\u4EE3\u7406\u751F\u6210\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7406\u751F\u6210\u8FC7\u7A0B" aria-hidden="true">#</a> \u4EE3\u7406\u751F\u6210\u8FC7\u7A0B</h3><p>\u4EE3\u7406\u751F\u6210\u4E3B\u8981\u662F\u901A\u8FC7target\u63A5\u53E3\u751F\u6210\u7684\uFF0C\u6211\u4EEC\u901A\u8FC7\u6E90\u7801\u53EF\u4EE5\u4E86\u89E3\u5230\u5176\u521B\u5EFA\u4EE3\u7406\u7684\u6574\u4E2A\u8FC7\u7A0B\u3002</p><ol><li><strong>\u521B\u5EFAReflectiveFeign</strong>\uFF1A <ol><li>\u6240\u6709\u7EC4\u4EF6\u7ECF\u8FC7Capability</li><li>\u521B\u5EFASynchronousMethodHandlerFactory</li><li>\u6309\u7167\u65B9\u6CD5\u540D\u89E3\u6790\u8DEF\u7531</li><li>\u521B\u5EFAReflectiveFeign</li></ol></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">target</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> apiType<span class="token punctuation">,</span> <span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HardCodedTarget</span><span class="token punctuation">(</span>apiType<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">target</span><span class="token punctuation">(</span><span class="token class-name">Target</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// target() \u65B9\u6CD5\u6700\u7EC8\u4F1A\u5728build()\u4E2D\u521B\u5EFAReflectiveFeign\u7C7B\uFF0C\u5E76\u8C03\u7528neInstance\u65B9\u6CD5</span>
<span class="token keyword">public</span> <span class="token class-name">Feign</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C06\u6240\u6709\u7684\u7EC4\u4EF6\u7ECF\u8FC7Capability\uFF0C\u7531\u6B64\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7Capability\u52A8\u6001\u7684\u4FEE\u6539Feign\u7EC4\u4EF6</span>
    <span class="token class-name">Client</span> client <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Client</span><span class="token punctuation">)</span><span class="token class-name">Capability</span><span class="token punctuation">.</span><span class="token function">enrich</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>capabilities<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Retryer</span> retryer <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Retryer</span><span class="token punctuation">)</span><span class="token class-name">Capability</span><span class="token punctuation">.</span><span class="token function">enrich</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>retryer<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>capabilities<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RequestInterceptor</span><span class="token punctuation">&gt;</span></span> requestInterceptors <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>requestInterceptors<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ri<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">RequestInterceptor</span><span class="token punctuation">)</span><span class="token class-name">Capability</span><span class="token punctuation">.</span><span class="token function">enrich</span><span class="token punctuation">(</span>ri<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>capabilities<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Logger</span><span class="token punctuation">)</span><span class="token class-name">Capability</span><span class="token punctuation">.</span><span class="token function">enrich</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>capabilities<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Contract</span> contract <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Contract</span><span class="token punctuation">)</span><span class="token class-name">Capability</span><span class="token punctuation">.</span><span class="token function">enrich</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>contract<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>capabilities<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Options</span> options <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Options</span><span class="token punctuation">)</span><span class="token class-name">Capability</span><span class="token punctuation">.</span><span class="token function">enrich</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>capabilities<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Encoder</span> encoder <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Encoder</span><span class="token punctuation">)</span><span class="token class-name">Capability</span><span class="token punctuation">.</span><span class="token function">enrich</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>encoder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>capabilities<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Decoder</span> decoder <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Decoder</span><span class="token punctuation">)</span><span class="token class-name">Capability</span><span class="token punctuation">.</span><span class="token function">enrich</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>decoder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>capabilities<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">InvocationHandlerFactory</span> invocationHandlerFactory <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InvocationHandlerFactory</span><span class="token punctuation">)</span><span class="token class-name">Capability</span><span class="token punctuation">.</span><span class="token function">enrich</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>invocationHandlerFactory<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>capabilities<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">QueryMapEncoder</span> queryMapEncoder <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">QueryMapEncoder</span><span class="token punctuation">)</span><span class="token class-name">Capability</span><span class="token punctuation">.</span><span class="token function">enrich</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queryMapEncoder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>capabilities<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7528\u4E8E\u521B\u5EFASynchronousMethodHandler\u7684\u5DE5\u5382\uFF0CSynchronousMethodHandler\u662F\u5B9E\u9645\u627F\u8F7DFeign\u4EE3\u7406\u8BF7\u6C42\u7684\u5B9E\u73B0\u7C7B</span>
    <span class="token class-name">Factory</span> synchronousMethodHandlerFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Factory</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> retryer<span class="token punctuation">,</span> requestInterceptors<span class="token punctuation">,</span> logger<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>logLevel<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>decode404<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>closeAfterDecode<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>propagationPolicy<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>forceDecoding<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u901A\u8FC7\u65B9\u6CD5\u540D\u533A\u5206\u4E0D\u540C\u63A5\u53E3\u7684\u5143\u6570\u636E\u89E3\u6790\uFF0C\u7528\u4E8E\u751F\u6210\u4E0D\u540C\u7684\u8DEF\u7531\uFF0C\u5E76\u5BF9\u5E94\u5230\u76F8\u5E94\u7684\u4EE3\u7406\u65B9\u6CD5</span>
    <span class="token class-name">ParseHandlersByName</span> handlersByName <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ParseHandlersByName</span><span class="token punctuation">(</span>contract<span class="token punctuation">,</span> options<span class="token punctuation">,</span> encoder<span class="token punctuation">,</span> decoder<span class="token punctuation">,</span> queryMapEncoder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>errorDecoder<span class="token punctuation">,</span> synchronousMethodHandlerFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFAReflectiveFeign</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ReflectiveFeign</span><span class="token punctuation">(</span>handlersByName<span class="token punctuation">,</span> invocationHandlerFactory<span class="token punctuation">,</span> queryMapEncoder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><ol start="2"><li>\u8C03\u7528newInstance\u65B9\u6CD5 <ol><li>\u89E3\u6790\u5143\u6570\u636E\u751F\u6210<strong>MethodHandler\uFF08\u8FD9\u4E2AHandler\u662F\u4E3B\u8981\u7684\u8C03\u7528\u903B\u8F91\uFF0C\u4E5F\u5C31\u662F\u88AB\u4EE3\u7406\u540E\u7684\u903B\u8F91\uFF09</strong>\uFF0C\u5E76\u4F7F\u5176\u4E0E\u65B9\u6CD5\u540D\u4E00\u4E00\u5BF9\u5E94\u3002\u5173\u4E8E\u89E3\u6790\u5143\u6570\u636E\u4E3AMethodHandler\u8FD9\u4E00\u6B65\uFF0C\u4E3B\u8981\u5C31\u6D89\u53CA\u5230\u4F7F\u7528Contract\u8FDB\u884C\u89E3\u7801\u5143\u6570\u636E\uFF0C\u5E76\u4E14\u4E0EMethodHandler\u7ED1\u5B9A\u3002</li><li>\u4F7F\u7528JDK\u7684\u52A8\u6001\u4EE3\u7406\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61\uFF0C\u5373\u521B\u5EFAInvocationHandler</li><li>\u5C06\u4EE3\u7406\u5BF9\u8C61\u4E0EDefaultMethodHandler\u5173\u8054</li></ol></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">Target</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6839\u636E\u65B9\u6CD5\u540D\u89E3\u6790\u5143\u6570\u636E\u5E76\u751F\u6210\u5BF9\u5E94\u9700\u8981\u88AB\u4EE3\u7406\u7684\u65B9\u6CD5\u7684MethodHandler</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">MethodHandler</span><span class="token punctuation">&gt;</span></span> nameToHandler <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>targetToHandlersByName<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token class-name">MethodHandler</span><span class="token punctuation">&gt;</span></span> methodToHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DefaultMethodHandler</span><span class="token punctuation">&gt;</span></span> defaultMethodHandlers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u5C06\u65B9\u6CD5\u540D\u548CMethodHandler\u4E00\u4E00\u5BF9\u5E94</span>
    <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var5 <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> var6 <span class="token operator">=</span> var5<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> var7 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> var7 <span class="token operator">&lt;</span> var6<span class="token punctuation">;</span> <span class="token operator">++</span>var7<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Method</span> method <span class="token operator">=</span> var5<span class="token punctuation">[</span>var7<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Util</span><span class="token punctuation">.</span><span class="token function">isDefault</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">DefaultMethodHandler</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMethodHandler</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
                defaultMethodHandlers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
                methodToHandler<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                methodToHandler<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> nameToHandler<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Feign</span><span class="token punctuation">.</span><span class="token function">configKey</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA InvocationHandler</span>
    <span class="token class-name">InvocationHandler</span> handler <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>factory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> methodToHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4F7F\u7528 proxy \u521B\u5EFA \u4EE3\u7406\u5BF9\u8C61</span>
    <span class="token class-name">T</span> proxy <span class="token operator">=</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>target<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u5C06\u4EE3\u7406\u5BF9\u8C61\u4E0EDefaultMethodHandler\u5173\u8054</span>
    <span class="token class-name">Iterator</span> var12 <span class="token operator">=</span> defaultMethodHandlers<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>var12<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DefaultMethodHandler</span> defaultMethodHandler <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">DefaultMethodHandler</span><span class="token punctuation">)</span>var12<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        defaultMethodHandler<span class="token punctuation">.</span><span class="token function">bindTo</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>\u5BF9\u4E8E\u7B2C\u4E00\u6B65\u7684\u89E3\u6790\u5143\u6570\u636E\uFF0C\u5176\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">MethodHandler</span><span class="token punctuation">&gt;</span></span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Target</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F7F\u7528Contract\u89E3\u6790\u6240\u6709\u5143\u6570\u636E</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MethodMetadata</span><span class="token punctuation">&gt;</span></span> metadata <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>contract<span class="token punctuation">.</span><span class="token function">parseAndValidateMetadata</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5143\u6570\u636E\u4E0EMethodHandler\u8FDB\u884C\u7ED1\u5B9A</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">MethodHandler</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Iterator</span> var4 <span class="token operator">=</span> metadata<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>var4<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MethodMetadata</span> md <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MethodMetadata</span><span class="token punctuation">)</span>var4<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> buildTemplate<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>md<span class="token punctuation">.</span><span class="token function">formParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> md<span class="token punctuation">.</span><span class="token function">template</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bodyTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            buildTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReflectiveFeign<span class="token punctuation">.</span>BuildFormEncodedTemplateFromArgs</span><span class="token punctuation">(</span>md<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>encoder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queryMapEncoder<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>md<span class="token punctuation">.</span><span class="token function">bodyIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>md<span class="token punctuation">.</span><span class="token function">alwaysEncodeBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            buildTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReflectiveFeign<span class="token punctuation">.</span>BuildTemplateByResolvingArgs</span><span class="token punctuation">(</span>md<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queryMapEncoder<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            buildTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReflectiveFeign<span class="token punctuation">.</span>BuildEncodedTemplateFromArgs</span><span class="token punctuation">(</span>md<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>encoder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queryMapEncoder<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>md<span class="token punctuation">.</span><span class="token function">isIgnored</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>md<span class="token punctuation">.</span><span class="token function">configKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>md<span class="token punctuation">.</span><span class="token function">configKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; is not a method handled by feign&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>md<span class="token punctuation">.</span><span class="token function">configKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>factory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> md<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Factory</span><span class="token punctuation">)</span>buildTemplate<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>decoder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>errorDecoder<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u7B2C\u4E8C\u6B65\u4E2D\uFF0CInvocationHandlerFactory\u751F\u6210\u7684InvocationHandler\u662FFeignInvocationHandler\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">InvocationHandlerFactory</span> <span class="token punctuation">{</span>
    <span class="token class-name">InvocationHandler</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Target</span> var1<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token class-name">InvocationHandlerFactory<span class="token punctuation">.</span>MethodHandler</span><span class="token punctuation">&gt;</span></span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Default</span> <span class="token keyword">implements</span> <span class="token class-name">InvocationHandlerFactory</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token class-name">InvocationHandler</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Target</span> target<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token class-name">InvocationHandlerFactory<span class="token punctuation">.</span>MethodHandler</span><span class="token punctuation">&gt;</span></span> dispatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FeignInvocationHandler</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> dispatch<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MethodHandler</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>InvocationHandler\u7684\u4E3B\u8981\u903B\u8F91\u5982\u4E0B\u6240\u793A\uFF0C\u5982\u679C\u65B9\u6CD5\u662Fequals\u3001hashCode\u3001toString\uFF0C\u5219\u76F4\u63A5\u8C03\u7528\uFF0C\u5982\u679C\u4E0D\u662F\u5219\u4F7F\u7528\u5BF9\u5E94\u7684MethodHandler\u4E2D\u7684\u65B9\u6CD5\u8FDB\u884C\u8C03\u7528\uFF0C\u4E5F\u5C31\u662F\u4F7F\u7528\u4EE3\u7406\u7684\u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">&quot;equals&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;hashCode&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u4E0D\u662Fequals\u3001hashCode\u3001toString\u5219\u4F7F\u7528MethodHandler\u4E2D\u88AB\u4EE3\u7406\u7684\u65B9\u6CD5</span>
            <span class="token keyword">return</span> <span class="token string">&quot;toString&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MethodHandler</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>dispatch<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Object</span> otherHandler <span class="token operator">=</span> args<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">getInvocationHandler</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>otherHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> var5<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h1 id="\u8BF7\u6C42\u8C03\u7528\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u8BF7\u6C42\u8C03\u7528\u8FC7\u7A0B" aria-hidden="true">#</a> \u8BF7\u6C42\u8C03\u7528\u8FC7\u7A0B</h1><p>MethodHandler\u4E2D\u662F\u5B9E\u9645\u6267\u884C\u8BF7\u6C42\u8C03\u7528\u7684\u903B\u8F91\uFF0C\u5BF9\u4E8E\u540C\u6B65\u8C03\u7528\u7684Feign\uFF0C\u4F7F\u7528\u7684\u662FSynchronousMethodHandler\u3002\u90A3\u4E48\u4E0B\u9762\u5C31\u5206\u6790\u540C\u6B65Feign\u7684\u4E00\u4E2A\u8C03\u7528\u8FC7\u7A0B\u3002</p><ol><li>\u521B\u5EFA\u8BF7\u6C42\u6A21\u677F\u5DE5\u5382RequestTemplate.Factory\uFF0C\u521B\u5EFA\u8BF7\u6C42\u6A21\u677FRequestTemplate\u3002</li><li>\u8BFB\u53D6Options\u914D\u7F6E\u3002</li><li>\u4F7F\u7528\u914D\u7F6E\u7684Retryer\u521B\u5EFA\u65B0\u7684Retryer\u3002</li><li>\u6267\u884C\u8BF7\u6C42\u5E76\u5C06\u54CD\u5E94\u6267\u884C\u53CD\u5E8F\u5217\u5316executeAndDecode\uFF1A <ol><li>\u5982\u679C\u914D\u7F6E\u4E86RequestInterceptor\uFF0C\u5219\u4F9D\u6B21\u6267\u884C</li><li>\u5C06\u8BF7\u6C42\u6A21\u677F\u8F6C\u5316\u4E3ARequest</li><li>\u901A\u8FC7Client\u6267\u884CRequest</li><li>\u5982\u679C\u54CD\u5E94\u7801\u65F62xx\uFF0C\u4F7F\u7528decode\u89E3\u6790\u54CD\u5E94</li><li>\u5982\u679C\u54CD\u5E94\u78014xx\uFF0C\u914D\u7F6E\u4E2D\u914D\u7F6E\u4E86\u9700\u8981\u89E3\u6790\uFF0C\u5219\u5BF94xx\u7684\u54CD\u5E94\u8FDB\u884Cdecode</li><li>\u5BF9\u4E8E\u5176\u4ED6\u54CD\u5E94\u7801\uFF0C\u5219\u4F7F\u7528errorDecoder\u8FDB\u884C\u53CD\u5E8F\u5217\u5316\uFF0C\u53EF\u4EE5\u81EA\u5DF1\u5B9E\u73B0errorDecoder\uFF0C\u629B\u51FARetryableException\u8FDB\u5165\u91CD\u8BD5\u903B\u8F91</li><li>\u5982\u679C\u4EE5\u4E0A\u6B65\u9AA4\u51FA\u73B0IOException\uFF0C\u5219\u5C01\u88C5\u6210RetryableException\u629B\u51FA</li></ol></li><li>\u5982\u679C\u8FC7\u7A0B\u4E2D\u6709\u629B\u51FA\u7684RetryableException\uFF0C\u5219\u4F7F\u7528\u7B2C\u4E09\u6B65\u521B\u5EFA\u7684Retryer\u8FDB\u884C\u91CD\u8BD5\uFF0C\u5373\u91CD\u65B0\u6267\u884C\u7B2C\u4E00\u6B65\u3002 \u4E0B\u9762\u662F1-5\u6B65\u7684\u6574\u4F53\u8FC7\u7A0B\u7684\u6E90\u7801\uFF0C\u4E3B\u8981\u5305\u542B\u5728SynchronousMethodHandler\u7684invoke\u7684\u65B9\u6CD5\u4E2D\uFF1A</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> argv<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u521B\u5EFA\u8BF7\u6C42\u6A21\u677F</span>
    <span class="token class-name">RequestTemplate</span> template <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>buildTemplateFromArgs<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 2.\u8BFB\u53D6Options\u914D\u7F6E</span>
    <span class="token class-name">Options</span> options <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findOptions</span><span class="token punctuation">(</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 3.\u521B\u5EFA\u91CD\u8BD5\u5668</span>
    <span class="token class-name">Retryer</span> retryer <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>retryer<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6267\u884C\u8BF7\u6C42</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executeAndDecode</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RetryableException</span> var9<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8BF7\u6C42\u91CD\u8BD5</span>
            <span class="token class-name">RetryableException</span> e <span class="token operator">=</span> var9<span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                retryer<span class="token punctuation">.</span><span class="token function">continueOrPropagate</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RetryableException</span> var8<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Throwable</span> cause <span class="token operator">=</span> var8<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>propagationPolicy <span class="token operator">==</span> <span class="token class-name">ExceptionPropagationPolicy</span><span class="token punctuation">.</span>UNWRAP <span class="token operator">&amp;&amp;</span> cause <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> cause<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">throw</span> var8<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logLevel <span class="token operator">!=</span> <span class="token class-name">Level</span><span class="token punctuation">.</span>NONE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">logRetry</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>metadata<span class="token punctuation">.</span><span class="token function">configKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>logLevel<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u5177\u4F53\u7684Http\u8BF7\u6C42\u8FC7\u7A0B\u4E3B\u8981\u5728executeAndDecode\u65B9\u6CD5\u4E2D\uFF0C\u4E0B\u9762\u662F\u5176\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Request</span> <span class="token function">targetRequest</span><span class="token punctuation">(</span><span class="token class-name">RequestTemplate</span> template<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6267\u884C\u62E6\u622A\u5668</span>
    <span class="token class-name">Iterator</span> var2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>requestInterceptors<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">RequestInterceptor</span> interceptor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RequestInterceptor</span><span class="token punctuation">)</span>var2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        interceptor<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8F6C\u5316\u4E3ARequest</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">Object</span> <span class="token function">executeAndDecode</span><span class="token punctuation">(</span><span class="token class-name">RequestTemplate</span> template<span class="token punctuation">,</span> <span class="token class-name">Options</span> options<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    <span class="token class-name">Request</span> request <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">targetRequest</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logLevel <span class="token operator">!=</span> <span class="token class-name">Level</span><span class="token punctuation">.</span>NONE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">logRequest</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>metadata<span class="token punctuation">.</span><span class="token function">configKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>logLevel<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Response</span> response<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u901A\u8FC7Http\u8BF7\u6C42Client\u6267\u884Chttp\u8BF7\u6C42</span>
        response <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u521B\u5EFA\u8BF7\u6C42</span>
        response <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">toBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">requestTemplate</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> var13<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logLevel <span class="token operator">!=</span> <span class="token class-name">Level</span><span class="token punctuation">.</span>NONE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">logIOException</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>metadata<span class="token punctuation">.</span><span class="token function">configKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>logLevel<span class="token punctuation">,</span> var13<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">elapsedTime</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token class-name">FeignException</span><span class="token punctuation">.</span><span class="token function">errorExecuting</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> var13<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">long</span> elapsedTime <span class="token operator">=</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>NANOSECONDS<span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>decoder <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>decoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>metadata<span class="token punctuation">.</span><span class="token function">returnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> resultFuture <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6839\u636E\u4E0D\u540C\u7684\u54CD\u5E94\u7801\u8FDB\u884C\u5904\u7406</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>asyncResponseHandler<span class="token punctuation">.</span><span class="token function">handleResponse</span><span class="token punctuation">(</span>resultFuture<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>metadata<span class="token punctuation">.</span><span class="token function">configKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>metadata<span class="token punctuation">.</span><span class="token function">returnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> elapsedTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>resultFuture<span class="token punctuation">.</span><span class="token function">isDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Response handling not done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> resultFuture<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">CompletionException</span> var12<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Throwable</span> cause <span class="token operator">=</span> var12<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cause <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> cause<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> var12<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div>`,36);function h(f,v){const s=o("RouterLink");return c(),l(u,null,[r,n("nav",m,[n("ul",null,[n("li",null,[a(s,{to:"#jdk\u7684\u52A8\u6001\u4EE3\u7406"},{default:p(()=>[d]),_:1})]),n("li",null,[a(s,{to:"#openfeign\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61\u8FC7\u7A0B"},{default:p(()=>[b]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#\u914D\u7F6E\u9879\u89E3\u6790"},{default:p(()=>[y]),_:1})]),n("li",null,[a(s,{to:"#\u4EE3\u7406\u751F\u6210\u8FC7\u7A0B"},{default:p(()=>[w]),_:1})])])])])]),g],64)}var x=e(k,[["render",h]]);export{x as default};
