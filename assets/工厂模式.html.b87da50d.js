import{_ as t,r as c,o,a as l,d as n,b as a,w as p,F as u,e as r,f as e}from"./app.7eb989d9.js";const i={},k=n("div",{class:"custom-container info"},[n("p",{class:"custom-container-title"},"\u76F8\u5173\u4FE1\u606F"),n("p",null,"\u6587\u7AE0\u4ECB\u7ECD")],-1),b={class:"table-of-contents"},m=e("\u573A\u666F"),d=e("\u5B9E\u73B0"),f=e("\u573A\u666F"),y=e("\u5B9E\u73B0"),g=e("\u5DE5\u5382\u7684\u62BD\u8C61"),w=e("\u4E3A\u5DE5\u5382\u521B\u5EFA\u5DE5\u5382"),h=e("\u573A\u666F"),P=e("\u5B9E\u73B0"),C=r(`<hr><h1 id="\u7B80\u5355\u5DE5\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u5DE5\u7A0B" aria-hidden="true">#</a> \u7B80\u5355\u5DE5\u7A0B</h1><h2 id="\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F" aria-hidden="true">#</a> \u573A\u666F</h2><p>\u6839\u636E\u4E0D\u540C\u7684\u8981\u6C42\u521B\u5EFA\u4E0D\u540C\u7684\u5B9E\u4F8B\uFF0C\u51CF\u5C11\u4F20\u7EDF\u7684if-else\u5224\u65AD\uFF0C<strong>\u5BF9\u8C61\u53EF\u4EE5\u590D\u7528,\u521B\u5EFA\u53EF\u7F13\u5B58\u7684\u5355\u4F8B\u5BF9\u8C61</strong>\u3002</p><h2 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h2><ul><li>\u4E0D\u540C\u7684\u5B9E\u4F8B\u9700\u8981\u5B9E\u73B0\u540C\u4E00\u4E2A\u63A5\u53E3</li><li>\u5C06\u4E0D\u540C\u7684\u5B9E\u4F8B\u7F13\u5B58\u8D77\u6765</li><li>\u6839\u636E\u9700\u8981\u8FDB\u884C\u521B\u5EFA\u6216\u8005\u83B7\u53D6</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4E00\u822C\u4F7F\u7528Factory\u7ED3\u5C3E</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuleConfigParserFactory</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5BF9\u4E8E\u5B9E\u4F8B\u53EF\u4EE5\u590D\u7528\u7684\u60C5\u51B5\uFF0C\u5B8C\u5168\u53EF\u4EE5\u4F7F\u7528static\u5C06\u5EFA\u7ACB\u597D\u7684\u5BF9\u8C61\u7F13\u5B58\u8D77\u6765</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">RuleConfigParser</span><span class="token punctuation">&gt;</span></span> cachedParsers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token punctuation">{</span>
    cachedParsers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">JsonRuleConfigParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cachedParsers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;xml&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XmlRuleConfigParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cachedParsers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;yaml&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">YamlRuleConfigParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cachedParsers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;properties&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PropertiesRuleConfigParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u521B\u5EFA\u7684\u65B9\u6CD5\u4E00\u822C\u7528create\u5F00\u5934</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">IRuleConfigParser</span> <span class="token function">createParser</span><span class="token punctuation">(</span><span class="token class-name">String</span> configFormat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>configFormat <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> configFormat<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment">//\u8FD4\u56DEnull\u8FD8\u662FIllegalArgumentException\u5168\u51ED\u4F60\u81EA\u5DF1\u8BF4\u4E86\u7B97</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">IRuleConfigParser</span> parser <span class="token operator">=</span> cachedParsers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>configFormat<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> parser<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h1 id="\u5DE5\u5382\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5382\u6A21\u5F0F" aria-hidden="true">#</a> \u5DE5\u5382\u6A21\u5F0F</h1><h2 id="\u573A\u666F-1" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F-1" aria-hidden="true">#</a> \u573A\u666F</h2><ul><li><strong>\u5BF9\u8C61\u5B9E\u4F8B\u4E0D\u53EF\u590D\u7528</strong></li><li>\u5DE5\u5382\u53EF\u4EE5\u590D\u7528</li><li><strong>\u521B\u5EFA\u548C\u4E1A\u52A1\u5265\u79BB</strong></li><li><strong>\u5DE5\u5382\u7C7B\u578B\uFF08\u5B9E\u4F8B\u7684\u7C7B\u578B\uFF09\u53EF\u80FD\u589E\u52A0</strong></li><li><strong>\u5B9E\u4F8B\u7684\u9009\u62E9\u662F\u540C\u4E00\u4E2A\u7EF4\u5EA6\u63CF\u8FF0\u7684</strong></li></ul><h2 id="\u5B9E\u73B0-1" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-1" aria-hidden="true">#</a> \u5B9E\u73B0</h2><ul><li>\u5229\u7528\u591A\u6001\uFF0C\u5DE5\u5382\u7C7B\u8FDB\u884C\u62BD\u8C61\uFF0C\u901A\u8FC7\u5B9E\u73B0\u4E0D\u540C\u7684\u5DE5\u5382\u7C7B\uFF0C\u6765\u5B9E\u73B0\u53EF\u6269\u5C55\u6027</li><li>\u4E3A\u5DE5\u5382\u7C7B\u518D\u521B\u5EFA\u5DE5\u5382\uFF0C\u7528\u6765\u521B\u5EFA\u5DE5\u5382\u5BF9\u8C61\uFF08\u5DE5\u5382\u7684\u5DE5\u5382\uFF09\u3010<strong>\u5DE5\u5382\u7684\u5DE5\u5382\u521B\u5EFA\u7279\u5B9A\u7684\u5DE5\u5382\uFF0C\u7279\u5B9A\u7684\u5DE5\u5382\u521B\u5EFA\u5BF9\u8C61</strong>\u3011</li><li>\u4E0D\u540C\u7684\u5B9E\u4F8B\u5E94\u8BE5\u5B9E\u73B0\u540C\u4E00\u7C7B\u7684\u4E1A\u52A1\u62BD\u8C61</li></ul><h3 id="\u5DE5\u5382\u7684\u62BD\u8C61" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5382\u7684\u62BD\u8C61" aria-hidden="true">#</a> \u5DE5\u5382\u7684\u62BD\u8C61</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5DE5\u5382\u7684\u62BD\u8C61\uFF0C\u5176\u4E1A\u52A1\u4E3B\u8981\u662F\u4E3A\u4E86\u521B\u5EFA\u7279\u5B9A\u7684\u5DE5\u5382</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IRuleConfigParserFactory</span> <span class="token punctuation">{</span>
  <span class="token class-name">IRuleConfigParser</span> <span class="token function">createParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7279\u5B9A\u7684\u5DE5\u5382\u5B9E\u73B0\u5BF9\u4E0D\u540C\u5B9E\u4F8B\u7684\u521B\u5EFA</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonRuleConfigParserFactory</span> <span class="token keyword">implements</span> <span class="token class-name">IRuleConfigParserFactory</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">IRuleConfigParser</span> <span class="token function">createParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonRuleConfigParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XmlRuleConfigParserFactory</span> <span class="token keyword">implements</span> <span class="token class-name">IRuleConfigParserFactory</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">IRuleConfigParser</span> <span class="token function">createParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">XmlRuleConfigParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">YamlRuleConfigParserFactory</span> <span class="token keyword">implements</span> <span class="token class-name">IRuleConfigParserFactory</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">IRuleConfigParser</span> <span class="token function">createParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">YamlRuleConfigParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PropertiesRuleConfigParserFactory</span> <span class="token keyword">implements</span> <span class="token class-name">IRuleConfigParserFactory</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">IRuleConfigParser</span> <span class="token function">createParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PropertiesRuleConfigParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="\u4E3A\u5DE5\u5382\u521B\u5EFA\u5DE5\u5382" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u5DE5\u5382\u521B\u5EFA\u5DE5\u5382" aria-hidden="true">#</a> \u4E3A\u5DE5\u5382\u521B\u5EFA\u5DE5\u5382</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u5177\u4F53\u8C03\u7528</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuleConfigSource</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token class-name">RuleConfig</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">String</span> ruleConfigFilePath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> ruleConfigFileExtension <span class="token operator">=</span> <span class="token function">getFileExtension</span><span class="token punctuation">(</span>ruleConfigFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6\u5DE5\u5382\uFF0C\u5C06\u521B\u5EFA\u4E0E\u4E1A\u52A1\u5206\u79BB\uFF0C\u540E\u671F\u5982\u679C\u518D\u52A0\u65B0\u7684\u7C7B\u578B\uFF0C\u8FD9\u4E2A\u7C7B\u5B8C\u5168\u53EF\u4EE5\u4E0D\u7528\u6539\u52A8</span>
    <span class="token class-name">IRuleConfigParserFactory</span> parserFactory <span class="token operator">=</span> <span class="token class-name">RuleConfigParserFactoryMap</span><span class="token punctuation">.</span><span class="token function">getParserFactory</span><span class="token punctuation">(</span>ruleConfigFileExtension<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>parserFactory <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidRuleConfigException</span><span class="token punctuation">(</span><span class="token string">&quot;Rule config file format is not supported: &quot;</span> <span class="token operator">+</span> ruleConfigFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u83B7\u53D6\u5230\u5DE5\u5382\u540E\u8FDB\u884C\u521B\u5EFA</span>
    <span class="token class-name">IRuleConfigParser</span> parser <span class="token operator">=</span> parserFactory<span class="token punctuation">.</span><span class="token function">createParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> configText <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5177\u4F53\u5B9E\u4F8B\u7684\u4E1A\u52A1\u65B9\u6CD5</span>
    <span class="token class-name">RuleConfig</span> ruleConfig <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>configText<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ruleConfig<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getFileExtension</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//...\u89E3\u6790\u6587\u4EF6\u540D\u83B7\u53D6\u6269\u5C55\u540D\uFF0C\u6BD4\u5982rule.json\uFF0C\u8FD4\u56DEjson</span>
    <span class="token keyword">return</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u56E0\u4E3A\u5DE5\u5382\u7C7B\u53EA\u5305\u542B\u65B9\u6CD5\uFF0C\u4E0D\u5305\u542B\u6210\u5458\u53D8\u91CF\uFF0C\u5B8C\u5168\u53EF\u4EE5\u590D\u7528\uFF0C</span>
<span class="token comment">//\u4E0D\u9700\u8981\u6BCF\u6B21\u90FD\u521B\u5EFA\u65B0\u7684\u5DE5\u5382\u7C7B\u5BF9\u8C61\u3002</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuleConfigParserFactoryMap</span> <span class="token punctuation">{</span> <span class="token comment">//\u5DE5\u5382\u7684\u5DE5\u5382</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">IRuleConfigParserFactory</span><span class="token punctuation">&gt;</span></span> cachedFactories <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">static</span> <span class="token punctuation">{</span>
    cachedFactories<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">JsonRuleConfigParserFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cachedFactories<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;xml&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XmlRuleConfigParserFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cachedFactories<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;yaml&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">YamlRuleConfigParserFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cachedFactories<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;properties&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PropertiesRuleConfigParserFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">IRuleConfigParserFactory</span> <span class="token function">getParserFactory</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> type<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">IRuleConfigParserFactory</span> parserFactory <span class="token operator">=</span> cachedFactories<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> parserFactory<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><h1 id="\u62BD\u8C61\u5DE5\u5382" tabindex="-1"><a class="header-anchor" href="#\u62BD\u8C61\u5DE5\u5382" aria-hidden="true">#</a> \u62BD\u8C61\u5DE5\u5382</h1><h2 id="\u573A\u666F-2" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F-2" aria-hidden="true">#</a> \u573A\u666F</h2><p>\u5728\u5DE5\u5382\u7684\u57FA\u7840\u4E0A\uFF0C\u5982\u679C\u5DE5\u5382\u7C7B\u578B\uFF08\u5B9E\u4F8B\u7C7B\u578B\uFF09\u4E0D\u662F\u4ECE\u4E00\u4E2A\u7EF4\u5EA6\u63CF\u8FF0\u7684\uFF0C\u6BD4\u5982\u9664\u4E86\u914D\u7F6E\u6587\u4EF6\u7684\u65B9\u5F0F\uFF0C\u8FD8\u53EF\u4EE5\u901A\u8FC7\u89C4\u5219\u5982system\u3001linux\u3001mac\u7B49\u7EF4\u5EA6\u8FDB\u884C\u5206\u7C7B\uFF0C\u90A3\u4E48\u5BF9\u4E8E\u5DE5\u5382\u6A21\u5F0F\u800C\u8A00\u5C31\u8FC7\u4E8E\u7E41\u7410\u3002</p><h2 id="\u5B9E\u73B0-2" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-2" aria-hidden="true">#</a> \u5B9E\u73B0</h2><ul><li>\u5DE5\u5382\u7684\u62BD\u8C61\u65B9\u6CD5\u4E2D\uFF0C\u5BF9\u4E0D\u540C\u7C7B\u578B\u8FDB\u884C\u5206\u7C7B</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IConfigParserFactory</span> <span class="token punctuation">{</span>
  <span class="token class-name">IRuleConfigParser</span> <span class="token function">createRuleParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">ISystemConfigParser</span> <span class="token function">createSystemParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u6B64\u5904\u53EF\u4EE5\u6269\u5C55\u65B0\u7684parser\u7C7B\u578B\uFF0C\u6BD4\u5982IBizConfigParser</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonConfigParserFactory</span> <span class="token keyword">implements</span> <span class="token class-name">IConfigParserFactory</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">IRuleConfigParser</span> <span class="token function">createRuleParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonRuleConfigParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">ISystemConfigParser</span> <span class="token function">createSystemParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonSystemConfigParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XmlConfigParserFactory</span> <span class="token keyword">implements</span> <span class="token class-name">IConfigParserFactory</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">IRuleConfigParser</span> <span class="token function">createRuleParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">XmlRuleConfigParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">ISystemConfigParser</span> <span class="token function">createSystemParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">XmlSystemConfigParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7701\u7565YamlConfigParserFactory\u548CPropertiesConfigParserFactory\u4EE3\u7801</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div>`,22);function F(R,_){const s=c("RouterLink");return o(),l(u,null,[k,n("nav",b,[n("ul",null,[n("li",null,[a(s,{to:"#\u573A\u666F"},{default:p(()=>[m]),_:1})]),n("li",null,[a(s,{to:"#\u5B9E\u73B0"},{default:p(()=>[d]),_:1})]),n("li",null,[a(s,{to:"#\u573A\u666F-1"},{default:p(()=>[f]),_:1})]),n("li",null,[a(s,{to:"#\u5B9E\u73B0-1"},{default:p(()=>[y]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#\u5DE5\u5382\u7684\u62BD\u8C61"},{default:p(()=>[g]),_:1})]),n("li",null,[a(s,{to:"#\u4E3A\u5DE5\u5382\u521B\u5EFA\u5DE5\u5382"},{default:p(()=>[w]),_:1})])])]),n("li",null,[a(s,{to:"#\u573A\u666F-2"},{default:p(()=>[h]),_:1})]),n("li",null,[a(s,{to:"#\u5B9E\u73B0-2"},{default:p(()=>[P]),_:1})])])]),C],64)}var x=t(i,[["render",F]]);export{x as default};
